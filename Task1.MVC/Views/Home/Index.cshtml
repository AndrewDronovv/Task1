@model Task1.MVC.ViewModel.PagedPersonViewModel
@{
    ViewBag.Title = "People's List";
}

<main>
    <h2>People's List (Total Records: @Model.TotalRecords)</h2>

    <div>
        <form method="get" action="@Url.Action("Index")">
            <label for="pageSize">Records per page:</label>
            <select name="pageSize" id="pageSize" onchange="this.form.submit()">
                <option value="10" @(Model.PageSize == 10 ? "selected" : "")>10</option>
                <option value="25" @(Model.PageSize == 25 ? "selected" : "")>25</option>
                <option value="50" @(Model.PageSize == 50 ? "selected" : "")>50</option>
                <option value="100" @(Model.PageSize == 100 ? "selected" : "")>100</option>
            </select>
            <input type="hidden" name="page" value="1" />
        </form>
    </div>

    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Birth Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in Model.Persons)
            {
                <tr>
                    <td>@person.Id</td>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.Email</td>
                    <td>@person.BirthDate.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })">First</a>
            <a href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a>
        }

        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
        {
            <a href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })" class="@(i == Model.CurrentPage ? "active" : "")">@i</a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
            <a href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize })">Last</a>
        }
    </div>

    <div>
        <span>Elapsed: @Model.Elapsed ms</span>
    </div>
</main>